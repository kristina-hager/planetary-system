plugins {
    id "com.jfrog.bintray" version "1.3.1"
}

apply plugin: 'java'
apply plugin: 'maven-publish'

version = '1.0.0'
sourceCompatibility = 1.7
targetCompatibility = 1.7
jar.baseName = 'planetary-system'

def localReleaseDest = "/Users/kristina/localRepos"

//use jcenter to fetch external dependencies
repositories {
    maven {
        url  "http://dl.bintray.com/kristina-hager/kh-examples" 
    }
    jcenter()
    //use below if you want to test jars locally, e.g. to test before uploading
    //flatDir {
        //dirs "file://${localReleaseDest}"
    //}
}

//add dependencies
dependencies {
    compile group: 'example.com', name: 'hello-planet', version: '1.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}
//create jar  - with dependencies
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle PlanetarySystem Jar File Example',
            'Implementation-Version': version,
            'Main-Class': 'com.space.PlanetarySystem'
    }
}

//create a jar with hello-planet dependency included
//this is experimental and not used in any subsequent examples in my work
task fatJar(type: Jar) {
    //need to add a classifier to distinguish this from the regular jar
    classifier 'fatJar'
    manifest {
        attributes 'Implementation-Title': 'Gradle PlanetarySystem Fat Jar File Example',
            'Implementation-Version': version,
            'Main-Class': 'com.space.PlanetarySystem'
    }
    //give fat jar a unique name
    baseName = jar.baseName + '-fat'
    //below single line makes fat jar:
    from {configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


//add tasks to create sources JAR
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    //set basename of sources jar to be same as regular jar
    baseName = jar.baseName
}

//create javadoc JAR
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    //set basename of sources jar to be same as regular jar
    baseName = jar.baseName
}

//add javadoc, sources, fat JARs to artifacts
artifacts {
    archives sourcesJar
    archives javadocJar
    archives fatJar
}

//publish to Maven repo on local filesystem
uploadArchives {
    repositories {
        flatDir {
            dirs "file://${localReleaseDest}"
        }
    }
}

//require :build tasks such as :test,:assemble before upload archives
tasks.uploadArchives.dependsOn(build)

//adding maven information
publishing {
	publications {
        //name 'MyPublication' corresponds to 'publications' setting in bintray section
		MyPublication(MavenPublication) {
			from components.java
            groupId 'example.com'
            artifactId jar.baseName
            version version

            //add sources and javadoc jars to upload
            artifact(sourcesJar)
            artifact(javadocJar)
            artifact(fatJar)
		}
	}
}

//bintray / jcenter configuration
//NOTE: I set credentials in my SHELL environment rather than here for security reasons
//  There is more than one way to achieve this security.
//use command: gradle bintrayUpload
//to upload the archives
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    //links to 'publishing' section above:
    publications = ['MyPublication']
    //package info. repo, name, licenses, vcsUrl are required
    pkg {
        repo = 'kh-examples'
        name = jar.baseName
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/kristina-hager/planetary-system.git'
        //in version, only name is required
        version {
            name = version
            desc = 'Planetary system - a simple java example'
        }
    }
}

//again, add a dependency on :build to :bintrayUpload
tasks.bintrayUpload.dependsOn(build)

